"use strict";

const mongodb=require("mongodb").MongoClient;

class MongoUser{
  constructor(mongodb_path,db,collection){
    const _this=this;
    mongodb.connect(mongodb_path,{ useNewUrlParser: true },function(err,client){
      const users=client.db(db).collection(collection);
      _this.users=users;
    })
  }
  findUser(req){
    return undefined;
  }
  createUser(req){
    if(!req.query["username"] || !req.query["password"]){return false};
    this.users.insertOne({
      username:req.query["username"],
      password:req.query["password"],
      cookies:req.headers.cookie
      // ips:req.headers["x-forwarded-for"],
      // last_request:(new Date()).getTime(),
      // requests_made:1
    })
    return true;
  }
  updateUser(req){
    const _this=this;
    const user=this.findUser(req);
    if(!user){
      _this.createUser(req);
      return _this.findUser(req);
    }else{
      return user;
    }
  }
  retrieve(user,query){
    // console.log("headers:",headers)
    // console.log("query",query)
  }
  store(data){
    // console.log("headers:",headers)
    // console.log("query",query)

  }
  get(req){
    const action=req.query("action");
    // create account
    // login
    // recover
    const user=this.updateUser(req);
    console.log("user:",user)
    // const clear=this.securityCheck(user);
    // if(clear){return this.retrieve(user,query)};
  }
  post(req){

  }
}

const init=(port,db="app",collection="users")=>{
  return new MongoUser(`mongodb://localhost:${port || 27017}/`,db,collection);
}

exports.init=init;
